// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace aspnetserver.Models;

public partial class DESKTOPC8MF7FBContext : DbContext
{
    public DESKTOPC8MF7FBContext(DbContextOptions<DESKTOPC8MF7FBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<SavedAsset> SavedAssets { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserFavorite> UserFavorites { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<SavedAsset>(entity =>
        {
            entity.HasKey(e => e.AssetId);

            entity.HasIndex(e => e.OwnerUserId, "IX_SavedAssets_OwnerUserID");

            entity.Property(e => e.FileName)
                .IsRequired()
                .HasDefaultValue("");
            entity.Property(e => e.OwnerUserId).HasColumnName("OwnerUserID");
            entity.Property(e => e.SavedAsset1)
                .IsRequired()
                .HasColumnName("Saved_Asset");

            entity.HasOne(d => d.OwnerUser).WithMany(p => p.SavedAssets).HasForeignKey(d => d.OwnerUserId);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.UserId).HasColumnName("userID");
            entity.Property(e => e.ConfirmationCode)
                .HasMaxLength(6)
                .HasColumnName("confirmation_code");
            entity.Property(e => e.DisplayName)
                .HasMaxLength(30)
                .HasDefaultValue("")
                .HasColumnName("display_name");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(30)
                .HasDefaultValue("")
                .HasColumnName("email");
            entity.Property(e => e.IsVerified).HasColumnName("is_verified");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("password");
            entity.Property(e => e.ProfileBackground)
                .HasMaxLength(255)
                .HasDefaultValue("")
                .HasColumnName("profile_background");
            entity.Property(e => e.ProfilePicture)
                .HasMaxLength(255)
                .HasDefaultValue("")
                .HasColumnName("profile_picture");
            entity.Property(e => e.UserBio)
                .HasMaxLength(300)
                .HasDefaultValue("")
                .HasColumnName("user_bio");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(30)
                .HasColumnName("username");
        });

        modelBuilder.Entity<UserFavorite>(entity =>
        {
            entity.HasIndex(e => e.AssetId, "IX_UserFavorites_AssetId");

            entity.HasIndex(e => e.UserId, "IX_UserFavorites_UserId");

            entity.HasOne(d => d.Asset).WithMany(p => p.UserFavorites)
                .HasForeignKey(d => d.AssetId)
                .OnDelete(DeleteBehavior.ClientSetNull);

            entity.HasOne(d => d.User).WithMany(p => p.UserFavorites)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}